//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenNETCF.ORM
{
    using System;
    using OpenNETCF.ORM;
    
    
    [Entity(KeyScheme.None)]
    public class Products
    {
        
        private static Products ORM_CreateProxy(OpenNETCF.ORM.FieldAttributeCollection fields, System.Data.IDataReader results)
        {
            var item = new Products();
foreach(var field in fields){
            var value = results[field.Ordinal];
switch(field.FieldName){
case "ProductID":
            // If this is a TimeSpan, use the commented line below
            // item.ProductID = (value == DBNull.Value) ? TimeSpan.MinValue; : new TimeSpan((long)value);
            item.ProductID = (value == DBNull.Value) ? 0 : (long)value;
            break;
case "ProductName":
            item.ProductName = (value == DBNull.Value) ? null : (string)value;
            break;
case "SupplierID":
            // If this is a TimeSpan, use the commented line below
            // item.SupplierID = (value == DBNull.Value) ? null : new TimeSpan((long)value);
            item.SupplierID = (value == DBNull.Value) ? 0 : (long?)value;
            break;
case "CategoryID":
            // If this is a TimeSpan, use the commented line below
            // item.CategoryID = (value == DBNull.Value) ? null : new TimeSpan((long)value);
            item.CategoryID = (value == DBNull.Value) ? 0 : (long?)value;
            break;
case "QuantityPerUnit":
            item.QuantityPerUnit = (value == DBNull.Value) ? null : (string)value;
            break;
case "UnitPrice":
            item.UnitPrice = (value == DBNull.Value) ? 0 : (decimal?)value;
            break;
case "UnitsInStock":
            item.UnitsInStock = (value == DBNull.Value) ? (short?)0 : (short?)value;
            break;
case "UnitsOnOrder":
            item.UnitsOnOrder = (value == DBNull.Value) ? (short?)0 : (short?)value;
            break;
case "ReorderLevel":
            item.ReorderLevel = (value == DBNull.Value) ? (short?)0 : (short?)value;
            break;
case "Discontinued":
            // Field 'Discontinued' not generated: Unsupported type 'Boolean'
            break;
case "DiscontinuedDate":
            item.DiscontinuedDate = (value == DBNull.Value) ? null : (DateTime?)value;
            break;
}
}
            return item;
        }
        
        private long m_productid;
        
        private string m_productname;
        
        private System.Nullable<long> m_supplierid;
        
        private System.Nullable<long> m_categoryid;
        
        private string m_quantityperunit;
        
        private System.Nullable<decimal> m_unitprice;
        
        private System.Nullable<short> m_unitsinstock;
        
        private System.Nullable<short> m_unitsonorder;
        
        private System.Nullable<short> m_reorderlevel;
        
        private bool m_discontinued;
        
        private System.Nullable<System.DateTime> m_discontinueddate;
        
        private Suppliers m_refSuppliers;
        
        private Categories m_refCategories;
        
        [Field(IsPrimaryKey=true)]
        public long ProductID
        {
            get
            {
                return this.m_productid;
            }
            set
            {
                this.m_productid = value;
            }
        }
        
        [Field(SearchOrder=FieldSearchOrder.Ascending)]
        public string ProductName
        {
            get
            {
                return this.m_productname;
            }
            set
            {
                this.m_productname = value;
            }
        }
        
        [Field(SearchOrder=FieldSearchOrder.Ascending)]
        public System.Nullable<long> SupplierID
        {
            get
            {
                return this.m_supplierid;
            }
            set
            {
                this.m_supplierid = value;
            }
        }
        
        [Field(SearchOrder=FieldSearchOrder.Ascending)]
        public System.Nullable<long> CategoryID
        {
            get
            {
                return this.m_categoryid;
            }
            set
            {
                this.m_categoryid = value;
            }
        }
        
        [Field()]
        public string QuantityPerUnit
        {
            get
            {
                return this.m_quantityperunit;
            }
            set
            {
                this.m_quantityperunit = value;
            }
        }
        
        [Field()]
        public System.Nullable<decimal> UnitPrice
        {
            get
            {
                return this.m_unitprice;
            }
            set
            {
                this.m_unitprice = value;
            }
        }
        
        [Field()]
        public System.Nullable<short> UnitsInStock
        {
            get
            {
                return this.m_unitsinstock;
            }
            set
            {
                this.m_unitsinstock = value;
            }
        }
        
        [Field()]
        public System.Nullable<short> UnitsOnOrder
        {
            get
            {
                return this.m_unitsonorder;
            }
            set
            {
                this.m_unitsonorder = value;
            }
        }
        
        [Field()]
        public System.Nullable<short> ReorderLevel
        {
            get
            {
                return this.m_reorderlevel;
            }
            set
            {
                this.m_reorderlevel = value;
            }
        }
        
        [Field()]
        public bool Discontinued
        {
            get
            {
                return this.m_discontinued;
            }
            set
            {
                this.m_discontinued = value;
            }
        }
        
        [Field()]
        public System.Nullable<System.DateTime> DiscontinuedDate
        {
            get
            {
                return this.m_discontinueddate;
            }
            set
            {
                this.m_discontinueddate = value;
            }
        }
        
        [Reference(typeof(Suppliers), "SupplierID", ReferenceType=ReferenceType.ManyToOne)]
        public Suppliers Supplier
        {
            get
            {
                return this.m_refSuppliers;
            }
            set
            {
                this.m_refSuppliers = value;
            }
        }
        
        [Reference(typeof(Categories), "CategoryID", ReferenceType=ReferenceType.ManyToOne)]
        public Categories Categorie
        {
            get
            {
                return this.m_refCategories;
            }
            set
            {
                this.m_refCategories = value;
            }
        }
    }
}
