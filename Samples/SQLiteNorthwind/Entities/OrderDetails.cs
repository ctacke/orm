//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenNETCF.ORM
{
    using System;
    using OpenNETCF.ORM;
    
    
    [Entity(KeyScheme.None)]
    public class OrderDetails
    {
        
        private static OrderDetails ORM_CreateProxy(OpenNETCF.ORM.FieldAttributeCollection fields, System.Data.IDataReader results)
        {
            var item = new OrderDetails();
foreach(var field in fields){
            var value = results[field.Ordinal];
switch(field.FieldName){
case "OrderID":
            // If this is a TimeSpan, use the commented line below
            // item.OrderID = (value == DBNull.Value) ? TimeSpan.MinValue; : new TimeSpan((long)value);
            item.OrderID = (value == DBNull.Value) ? 0 : (long)value;
            break;
case "ProductID":
            // If this is a TimeSpan, use the commented line below
            // item.ProductID = (value == DBNull.Value) ? TimeSpan.MinValue; : new TimeSpan((long)value);
            item.ProductID = (value == DBNull.Value) ? 0 : (long)value;
            break;
case "UnitPrice":
            item.UnitPrice = (value == DBNull.Value) ? 0 : (decimal)value;
            break;
case "Quantity":
            item.Quantity = (value == DBNull.Value) ? (short)0 : (short)value;
            break;
case "Discount":
            item.Discount = (value == DBNull.Value) ? 0 : (float)value;
            break;
}
}
            return item;
        }
        
        private long m_orderid;
        
        private long m_productid;
        
        private decimal m_unitprice;
        
        private short m_quantity;
        
        private float m_discount;
        
        private Products m_refProducts;
        
        private Orders m_refOrders;
        
        [Field(IsPrimaryKey=true, SearchOrder=FieldSearchOrder.Ascending)]
        public long OrderID
        {
            get
            {
                return this.m_orderid;
            }
            set
            {
                this.m_orderid = value;
            }
        }
        
        [Field(IsPrimaryKey=true, SearchOrder=FieldSearchOrder.Ascending)]
        public long ProductID
        {
            get
            {
                return this.m_productid;
            }
            set
            {
                this.m_productid = value;
            }
        }
        
        [Field()]
        public decimal UnitPrice
        {
            get
            {
                return this.m_unitprice;
            }
            set
            {
                this.m_unitprice = value;
            }
        }
        
        [Field()]
        public short Quantity
        {
            get
            {
                return this.m_quantity;
            }
            set
            {
                this.m_quantity = value;
            }
        }
        
        [Field()]
        public float Discount
        {
            get
            {
                return this.m_discount;
            }
            set
            {
                this.m_discount = value;
            }
        }
        
        [Reference(typeof(Products), "ProductID", ReferenceType=ReferenceType.ManyToOne)]
        public Products Product
        {
            get
            {
                return this.m_refProducts;
            }
            set
            {
                this.m_refProducts = value;
            }
        }
        
        [Reference(typeof(Orders), "OrderID", ReferenceType=ReferenceType.ManyToOne)]
        public Orders Order
        {
            get
            {
                return this.m_refOrders;
            }
            set
            {
                this.m_refOrders = value;
            }
        }
    }
}
