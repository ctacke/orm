//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenNETCF.ORM
{
    using System;
    using OpenNETCF.ORM;
    
    
    [Entity(KeyScheme.None)]
    public class Territories
    {
        
        private static Territories ORM_CreateProxy(OpenNETCF.ORM.FieldAttributeCollection fields, System.Data.IDataReader results)
        {
            var item = new Territories();
foreach(var field in fields){
            var value = results[field.Ordinal];
switch(field.FieldName){
case "TerritoryID":
            // If this is a TimeSpan, use the commented line below
            // item.TerritoryID = (value == DBNull.Value) ? TimeSpan.MinValue; : new TimeSpan((long)value);
            item.TerritoryID = (value == DBNull.Value) ? 0 : (long)value;
            break;
case "TerritoryDescription":
            item.TerritoryDescription = (value == DBNull.Value) ? null : (string)value;
            break;
case "RegionID":
            // If this is a TimeSpan, use the commented line below
            // item.RegionID = (value == DBNull.Value) ? TimeSpan.MinValue; : new TimeSpan((long)value);
            item.RegionID = (value == DBNull.Value) ? 0 : (long)value;
            break;
}
}
            return item;
        }
        
        private long m_territoryid;
        
        private string m_territorydescription;
        
        private long m_regionid;
        
        private Regions m_refRegions;
        
        [Field(IsPrimaryKey=true)]
        public long TerritoryID
        {
            get
            {
                return this.m_territoryid;
            }
            set
            {
                this.m_territoryid = value;
            }
        }
        
        [Field()]
        public string TerritoryDescription
        {
            get
            {
                return this.m_territorydescription;
            }
            set
            {
                this.m_territorydescription = value;
            }
        }
        
        [Field()]
        public long RegionID
        {
            get
            {
                return this.m_regionid;
            }
            set
            {
                this.m_regionid = value;
            }
        }
        
        [Reference(typeof(Regions), "RegionID", ReferenceType=ReferenceType.ManyToOne)]
        public Regions Region
        {
            get
            {
                return this.m_refRegions;
            }
            set
            {
                this.m_refRegions = value;
            }
        }
    }
}
